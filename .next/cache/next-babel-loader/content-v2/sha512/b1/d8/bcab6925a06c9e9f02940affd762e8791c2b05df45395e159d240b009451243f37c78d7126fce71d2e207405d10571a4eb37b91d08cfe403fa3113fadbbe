{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Drive\\\\Ingles\\\\Study\\\\Udemy\\\\ReactJS\\\\NextJs\\\\Starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  console.log(props.meetupData.title);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData,\n    title: props.meetupData,\n    address: props.meetupData,\n    description: props.meetupData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/Drive/Ingles/Study/Udemy/ReactJS/NextJs/Starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","console","log","meetupData","title"],"mappings":";;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAN,CAAiBC,KAA7B;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEJ,KAAK,CAACG,UADf;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACG,UAFf;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACG,UAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACG;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAVQJ,a;;AA2DT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n  console.log(props.meetupData.title);\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData}\r\n      title={props.meetupData}\r\n      address={props.meetupData}\r\n      description={props.meetupData}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://our-first-user:LM0E06CsqkKeo9JN@cluster0.la9dh.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://our-first-user:LM0E06CsqkKeo9JN@cluster0.la9dh.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  const allData = JSON.stringify(selectedMeetup);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: allData,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}